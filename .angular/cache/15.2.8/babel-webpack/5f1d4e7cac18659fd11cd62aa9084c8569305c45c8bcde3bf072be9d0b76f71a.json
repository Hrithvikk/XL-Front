{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class RegistrationComponent {\n  constructor(http, formBuilder) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.errorshow = true;\n  }\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      userName: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n  addRegister() {\n    this.errorshow = true;\n    if (this.registrationForm.valid) {\n      alert('1');\n      // if (this.registrationForm.invalid) {\n      //   this.markFormGroupTouched(this.registrationForm);\n      //   return;\n      // }\n      // if (this.registrationForm.valid) {\n      let obj = {\n        userName: this.registrationForm.value.userName,\n        mobile: this.registrationForm.value.mobile,\n        password: this.registrationForm.value.password\n      };\n      console.log(obj, 'ooo');\n      this.http.post('http://localhost:8443/api/register/createUser', obj).subscribe(res => {\n        alert('2');\n        console.log('result', res);\n      });\n    } else {\n      this.errorshow = false;\n    }\n  }\n  markFormGroupTouched(registrationForm) {\n    throw new Error('Method not implemented.');\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 33,\n  vars: 8,\n  consts: [[2, \"margin\", \"10%\", \"margin-left\", \"30%\"], [1, \"modal-title\", 2, \"margin\", \"10%\", \"margin-left\", \"30%\"], [1, \"modal-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"text-danger\"], [\"type\", \"text\", \"placeholder\", \"username/email\", \"formControlName\", \"userName\", 1, \"form-control\"], [3, \"hidden\"], [2, \"color\", \"red\"], [\"type\", \"text\", \"placeholder\", \"mobile no.\", \"formControlName\", \"mobile\", 1, \"form-control\"], [\"type\", \"text\", \"placeholder\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [1, \"submit-section\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-btn\", 2, \"margin\", \"3%\", \"margin-left\", \"40%\"], [\"routerLink\", \"/login\", 1, \"text-primary\", 2, \"cursor\", \"pointer\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \" Registration \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.addRegister();\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n      i0.ɵɵtext(7, \"Username\");\n      i0.ɵɵelementStart(8, \"span\", 5);\n      i0.ɵɵtext(9, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"span\", 8);\n      i0.ɵɵtext(13, \"email or username is not valid\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\");\n      i0.ɵɵtext(16, \"Mobile\");\n      i0.ɵɵelementStart(17, \"span\", 5);\n      i0.ɵɵtext(18, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"label\");\n      i0.ɵɵtext(22, \"Password\");\n      i0.ɵɵelementStart(23, \"span\", 5);\n      i0.ɵɵtext(24, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 11)(27, \"button\", 12);\n      i0.ɵɵtext(28, \" Submit \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(29, \"h4\");\n      i0.ɵɵtext(30, \" Already have an account ? \");\n      i0.ɵɵelementStart(31, \"span\", 13);\n      i0.ɵɵtext(32, \" Login here \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", ctx.registrationForm.get(\"userName\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"hidden\", ctx.errorshow);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"invalid\", ctx.registrationForm.get(\"mobile\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"invalid\", ctx.registrationForm.get(\"password\"));\n    }\n  },\n  dependencies: [i3.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAFzD,cAAS,GAAY,IAAI;EAEgD;EACzEC,QAAQ;IACN,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MAC7CC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACR,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACU,KAAK,CAAC,CAAC;MACvDC,MAAM,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACS,QAAQ,CAAC,CAAC;MACnCG,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACS,QAAQ,CAAC;KACrC,CAAC;EACJ;EACAI,WAAW;IACT,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACR,gBAAgB,CAACS,KAAK,EAAE;MAC/BC,KAAK,CAAC,GAAG,CAAC;MACV;MACA;MACA;MACA;MACA;MACA,IAAIC,GAAG,GAAG;QACRT,QAAQ,EAAE,IAAI,CAACF,gBAAgB,CAACY,KAAK,CAACV,QAAQ;QAC9CG,MAAM,EAAE,IAAI,CAACL,gBAAgB,CAACY,KAAK,CAACP,MAAM;QAC1CC,QAAQ,EAAE,IAAI,CAACN,gBAAgB,CAACY,KAAK,CAACN;OACvC;MACDO,OAAO,CAACC,GAAG,CAACH,GAAG,EAAE,KAAK,CAAC;MAEvB,IAAI,CAACd,IAAI,CACNkB,IAAI,CAAC,+CAA+C,EAAEJ,GAAG,CAAC,CAC1DK,SAAS,CAAEC,GAAQ,IAAI;QACtBP,KAAK,CAAC,GAAG,CAAC;QAEVG,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEG,GAAG,CAAC;MAC5B,CAAC,CAAC;KACL,MAAM;MACL,IAAI,CAACT,SAAS,GAAG,KAAK;;EAE1B;EACAU,oBAAoB,CAAClB,gBAAgC;IACnD,MAAM,IAAImB,KAAK,CAAC,yBAAyB,CAAC;EAC5C;;AAzCWxB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAyB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRlCC,8BAA2C;MAEvCA,8BACF;MAAAA,iBAAK;MAELA,8BAAwB;MAChBA;QAAA,OAAYC,iBAAa;MAAA,EAAC;MAC9BD,8BAAwB;MACfA,wBAAQ;MAAAA,+BAA0B;MAAAA,iBAAC;MAAAA,iBAAO;MACjDA,4BAME;MACFA,+BAA0B;MACCA,+CAA8B;MAAAA,iBAAO;MAGlEA,+BAAwB;MACfA,uBAAM;MAAAA,gCAA0B;MAAAA,kBAAC;MAAAA,iBAAO;MAC/CA,4BAME;MACJA,iBAAM;MACNA,+BAAwB;MACfA,yBAAQ;MAAAA,gCAA0B;MAAAA,kBAAC;MAAAA,iBAAO;MACjDA,6BAME;MACJA,iBAAM;MACNA,gCAA4B;MAMxBA,yBACF;MAAAA,iBAAS;MAGbA,2BAAI;MACFA,4CACA;MAAAA,iCAAuE;MACrEA,6BACF;MAAAA,iBAAO;;;MAhDwBA,eAA8B;MAA9BA,gDAA8B;MAOzDA,eAAkD;MAAlDA,+DAAkD;MAG/CA,eAAoB;MAApBA,sCAAoB;MAUvBA,eAAgD;MAAhDA,6DAAgD;MAUhDA,eAAkD;MAAlDA,+DAAkD","names":["Validators","RegistrationComponent","constructor","http","formBuilder","ngOnInit","registrationForm","group","userName","required","email","mobile","password","addRegister","errorshow","valid","alert","obj","value","console","log","post","subscribe","res","markFormGroupTouched","Error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ritik Porwal\\Desktop\\Xcel Practical\\Practical\\src\\app\\registration\\registration.component.ts","C:\\Users\\Ritik Porwal\\Desktop\\Xcel Practical\\Practical\\src\\app\\registration\\registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css'],\n})\nexport class RegistrationComponent {\n  public registrationForm!: FormGroup<any>;\n  errorshow: boolean = true;\n\n  constructor(private http: HttpClient, private formBuilder: FormBuilder) {}\n  ngOnInit() {\n    this.registrationForm = this.formBuilder.group({\n      userName: ['', [Validators.required, Validators.email]],\n      mobile: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n  addRegister() {\n    this.errorshow = true;\n    if (this.registrationForm.valid) {\n      alert('1');\n      // if (this.registrationForm.invalid) {\n      //   this.markFormGroupTouched(this.registrationForm);\n      //   return;\n      // }\n      // if (this.registrationForm.valid) {\n      let obj = {\n        userName: this.registrationForm.value.userName,\n        mobile: this.registrationForm.value.mobile,\n        password: this.registrationForm.value.password,\n      };\n      console.log(obj, 'ooo');\n\n      this.http\n        .post('http://localhost:8443/api/register/createUser', obj)\n        .subscribe((res: any) => {\n          alert('2');\n\n          console.log('result', res);\n        });\n    } else {\n      this.errorshow = false;\n    }\n  }\n  markFormGroupTouched(registrationForm: FormGroup<any>) {\n    throw new Error('Method not implemented.');\n  }\n}\n","<!-- Add Department Modal -->\n<div style=\"margin: 10%; margin-left: 30%\">\n  <h1 style=\"margin: 10%; margin-left: 30%\" class=\"modal-title\">\n    Registration\n  </h1>\n\n  <div class=\"modal-body\">\n    <form (ngSubmit)=\"addRegister()\" [formGroup]=\"registrationForm\">\n      <div class=\"form-group\">\n        <label>Username<span class=\"text-danger\">*</span></label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          placeholder=\"username/email\"\n          [class.invalid]=\"registrationForm.get('userName')\"\n          formControlName=\"userName\"\n        />\n        <div [hidden]=\"errorshow\">\n          <span style=\"color: red\">email or username is not valid</span>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label>Mobile<span class=\"text-danger\">*</span></label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          placeholder=\"mobile no.\"\n          [class.invalid]=\"registrationForm.get('mobile')\"\n          formControlName=\"mobile\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>Password<span class=\"text-danger\">*</span></label>\n        <input\n          class=\"form-control\"\n          type=\"text\"\n          placeholder=\"password\"\n          [class.invalid]=\"registrationForm.get('password')\"\n          formControlName=\"password\"\n        />\n      </div>\n      <div class=\"submit-section\">\n        <button\n          style=\"margin: 3%; margin-left: 40%\"\n          class=\"btn btn-primary submit-btn\"\n          type=\"submit\"\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n    <h4>\n      Already have an account ?\n      <span routerLink=\"/login\" class=\"text-primary\" style=\"cursor: pointer\">\n        Login here\n      </span>\n    </h4>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}