{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(http, formBuilder, router) {\n    this.http = http;\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.errorshow = true;\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.email]]\n    });\n  }\n  userLogin() {\n    this.errorshow = true;\n    if (this.loginForm.valid) {\n      console.log('OKKKKKKK', this.loginForm.value.email);\n      let obj = {\n        userName: this.loginForm.value.userName,\n        password: this.loginForm.value.password\n      };\n      this.http.post('http://localhost:8443/api/login/userLogin', obj).subscribe(res => {\n        if (res) {\n          sessionStorage.setItem('userName', res.userName);\n          let al = sessionStorage.getItem('userName');\n          sessionStorage.setItem('dataValue', '1');\n        }\n        console.log(res, 'kkk');\n        this.router.navigate(['audios']);\n      });\n    } else {\n      console.log('jkknk');\n      this.errorshow = false;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 25,\n  vars: 2,\n  consts: [[2, \"margin\", \"10%\", \"margin-left\", \"30%\"], [1, \"modal-title\", 2, \"margin\", \"10%\", \"margin-left\", \"30%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"text-danger\"], [\"type\", \"text\", \"placeholder\", \"username/email\", \"formControlName\", \"userName\", 1, \"form-control\"], [3, \"hidden\"], [2, \"color\", \"red\"], [\"type\", \"password\", \"placeholder\", \"password\", \"formControlName\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"submit-btn\", 2, \"margin\", \"3%\", \"margin-left\", \"40%\"], [\"routerLink\", \"/registration\", 1, \"text-primary\", 2, \"cursor\", \"pointer\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.userLogin();\n      });\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\");\n      i0.ɵɵtext(6, \"Username\");\n      i0.ɵɵelementStart(7, \"span\", 4);\n      i0.ɵɵtext(8, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"span\", 7);\n      i0.ɵɵtext(12, \"Email is not valid\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\");\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementStart(16, \"span\", 4);\n      i0.ɵɵtext(17, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 9);\n      i0.ɵɵtext(20, \" Submit \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"h4\");\n      i0.ɵɵtext(22, \" Don't have an account ? \");\n      i0.ɵɵelementStart(23, \"span\", 10);\n      i0.ɵɵtext(24, \" Create new account \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"hidden\", ctx.errorshow);\n    }\n  },\n  dependencies: [i3.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAQnE,OAAM,MAAOC,cAAc;EAIzBC,YACUC,IAAgB,EAChBC,WAAwB,EACxBC,MAAc;IAFd,SAAI,GAAJF,IAAI;IACJ,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IALhB,cAAS,GAAY,IAAI;EAMtB;EACHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MAErCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,KAAK,CAAC;KACvD,CAAC;EACJ;EACAC,SAAS;IACP,IAAI,CAACC,SAAS,GAAG,IAAI;IAErB,IAAI,IAAI,CAACP,SAAS,CAACQ,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAACV,SAAS,CAACW,KAAK,CAACN,KAAK,CAAC;MACnD,IAAIO,GAAG,GAAG;QACRV,QAAQ,EAAE,IAAI,CAACF,SAAS,CAACW,KAAK,CAACT,QAAQ;QACvCE,QAAQ,EAAE,IAAI,CAACJ,SAAS,CAACW,KAAK,CAACP;OAChC;MAED,IAAI,CAACR,IAAI,CACNiB,IAAI,CAAC,2CAA2C,EAAED,GAAG,CAAC,CACtDE,SAAS,CAAEC,GAAQ,IAAI;QACtB,IAAIA,GAAG,EAAE;UACPC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEF,GAAG,CAACb,QAAQ,CAAC;UAChD,IAAIgB,EAAE,GAAGF,cAAc,CAACG,OAAO,CAAC,UAAU,CAAC;UAC3CH,cAAc,CAACC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;;QAE1CR,OAAO,CAACC,GAAG,CAACK,GAAG,EAAE,KAAK,CAAC;QAEvB,IAAI,CAACjB,MAAM,CAACsB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAClC,CAAC,CAAC;KACL,MAAM;MACLX,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,IAAI,CAACH,SAAS,GAAG,KAAK;;EAE1B;;AA1CWb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAA2C;MACqBA,qBAAK;MAAAA,iBAAK;MACxEA,+BAAuD;MAAzBA;QAAA,OAAYC,eAAW;MAAA,EAAC;MACpDD,8BAAwB;MACfA,wBAAQ;MAAAA,+BAA0B;MAAAA,iBAAC;MAAAA,iBAAO;MACjDA,2BAKE;MACFA,+BAA0B;MACCA,mCAAkB;MAAAA,iBAAO;MAGtDA,+BAAwB;MACfA,yBAAQ;MAAAA,gCAA0B;MAAAA,kBAAC;MAAAA,iBAAO;MACjDA,4BAKE;MACJA,iBAAM;MACNA,kCAIC;MACCA,yBACF;MAAAA,iBAAS;MAEXA,2BAAI;MACFA,0CACA;MAAAA,iCAIC;MACCA,qCACF;MAAAA,iBAAO;;;MAtCHA,eAAuB;MAAvBA,yCAAuB;MASpBA,eAAoB;MAApBA,sCAAoB","names":["Validators","LoginComponent","constructor","http","formBuilder","router","ngOnInit","loginForm","group","userName","required","password","email","userLogin","errorshow","valid","console","log","value","obj","post","subscribe","res","sessionStorage","setItem","al","getItem","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ritik Porwal\\Desktop\\Xcel Practical\\Practical\\src\\app\\login\\login.component.ts","C:\\Users\\Ritik Porwal\\Desktop\\Xcel Practical\\Practical\\src\\app\\login\\login.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent {\n  public loginForm!: FormGroup<any>;\n  errorshow: boolean = true;\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {}\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userName: ['', [Validators.required]],\n\n      password: ['', [Validators.required, Validators.email]],\n    });\n  }\n  userLogin() {\n    this.errorshow = true;\n\n    if (this.loginForm.valid) {\n      console.log('OKKKKKKK', this.loginForm.value.email);\n      let obj = {\n        userName: this.loginForm.value.userName,\n        password: this.loginForm.value.password,\n      };\n\n      this.http\n        .post('http://localhost:8443/api/login/userLogin', obj)\n        .subscribe((res: any) => {\n          if (res) {\n            sessionStorage.setItem('userName', res.userName);\n            let al = sessionStorage.getItem('userName');\n            sessionStorage.setItem('dataValue', '1');\n          }\n          console.log(res, 'kkk');\n\n          this.router.navigate(['audios']);\n        });\n    } else {\n      console.log('jkknk');\n      this.errorshow = false;\n    }\n  }\n}\n","<div style=\"margin: 10%; margin-left: 30%\">\n  <h1 style=\"margin: 10%; margin-left: 30%\" class=\"modal-title\">Login</h1>\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"userLogin()\">\n    <div class=\"form-group\">\n      <label>Username<span class=\"text-danger\">*</span></label>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"username/email\"\n        formControlName=\"userName\"\n      />\n      <div [hidden]=\"errorshow\">\n        <span style=\"color: red\">Email is not valid</span>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label>Password<span class=\"text-danger\">*</span></label>\n      <input\n        class=\"form-control\"\n        type=\"password\"\n        placeholder=\"password\"\n        formControlName=\"password\"\n      />\n    </div>\n    <button\n      style=\"margin: 3%; margin-left: 40%\"\n      class=\"btn btn-primary submit-btn\"\n      type=\"submit\"\n    >\n      Submit\n    </button>\n  </form>\n  <h4>\n    Don't have an account ?\n    <span\n      routerLink=\"/registration\"\n      class=\"text-primary\"\n      style=\"cursor: pointer\"\n    >\n      Create new account\n    </span>\n  </h4>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}